<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>虾敏四把刀 - 博客园</title>
    <link rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/custom/bundle-custom.min.css?v=1ssrnY3Il79Ok472qeVrpxlSprSXcHhYPgZC5S3wtVM" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/flhs/custom.css?v=G3gt6A6ykimavnuZdO9m5E1CbgQ=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/custom/bundle-custom-mobile.min.css?v=-Yh290MhQyDeXLmvKTSses9H6-49lqbpXFh55zvS0w8" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/flhs/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/flhs/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/flhs/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=6bwfCY2e02dLOXNW99G2BHZkYFmw9QyYTWeJ-W-sudo"></script>
    <script>
        var currentBlogId = 105702;
        var currentBlogApp = 'flhs';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var skinName = 'Custom';
    </script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;v=20200504"></script>
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/flhs/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/flhs/">虾敏四把刀</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/flhs/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E8%99%BE%E6%95%8F%E5%9B%9B%E6%8A%8A%E5%88%80">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/flhs/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
19&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
6</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/flhs/archive/2020/05/27.html">2020年5月27日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12709962.html">
    Golang源码学习：调度逻辑（四）系统调用
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Linux系统调用 概念：系统调用为用户态进程提供了硬件的抽象接口。并且是用户空间访问内核的唯一手段，除异常和陷入外，它们是内核唯一的合法入口。保证系统的安全和稳定。 调用号：在Linux中，每个系统调用被赋予一个独一无二的系统调用号。当用户空间的进程执行一个系统调用时，会使用调用号指明系统调用。             <a href="https://www.cnblogs.com/flhs/p/12709962.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-27 23:57
虾敏四把刀
<span class="post-view-count">阅读(12)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12709962" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12682881.html">
    Golang源码学习：调度逻辑（三）工作线程的执行流程与调度循环
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：本文内容主要分为三部分： main goroutine 的调度运行 非 main goroutine 的退出流程 工作线程的执行流程与调度循环。 main goroutine 的调度运行 runtime&amp;#183;rt0_go中在调用完runtime.newproc创建main goroutine后，就调用了            <a href="https://www.cnblogs.com/flhs/p/12682881.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-27 12:31
虾敏四把刀
<span class="post-view-count">阅读(65)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12682881" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/flhs/archive/2020/05/26.html">2020年5月26日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12964768.html">
    Kubernetes学习笔记（八）:Deployment--声明式的升级应用
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：概述 本文核心问题是：如何升级应用。 对于Pod的更新有两种策略： 一是删除全部旧Pod之后再创建新Pod。好处是，同一时间只会有一个版本的应用存在；缺点是，应用有一段时间不可用。 二是先创建新Pod，再删除旧Pod。可以一次性创建全部，再删除全部，也可以逐渐创建删除。好处是应用一直可用，缺点是要同            <a href="https://www.cnblogs.com/flhs/p/12964768.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-26 16:56
虾敏四把刀
<span class="post-view-count">阅读(116)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12964768" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12962012.html">
    Kubernetes学习笔记（七）：访问Pod元数据与Kubernetes API
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Downward API 我们已经了解到，使用ConfigMap和Secret向应用传递配置数据，这对于运行前预设的数据是可行的。但是对于那些不能预先知道的，就需要使用Downward API。 Downward API允许我们通过环境变量或者卷的方式向应用传递元数据。可传递的数据包括：Pod的IP            <a href="https://www.cnblogs.com/flhs/p/12962012.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-26 09:29
虾敏四把刀
<span class="post-view-count">阅读(125)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12962012" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/flhs/archive/2020/05/25.html">2020年5月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12952683.html">
    Kubernetes学习笔记（六）：使用ConfigMap和Secret配置应用程序
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：概述 本文的核心是：如何处理应用程序的数据配置。 配置应用程序可以使用以下几种途径： 向容器传递命令行参数 为每个容器配置环境变量 通过特殊的卷将配置文件挂载到容器中 向容器传递命令行参数 在Kubernetes中定义容器时，镜像的ENTRYPOINT和CMD都可以被覆盖（但是在Docker中，镜像            <a href="https://www.cnblogs.com/flhs/p/12952683.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-25 22:07
虾敏四把刀
<span class="post-view-count">阅读(91)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12952683" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12677335.html">
    Golang源码学习：调度逻辑（二）main goroutine的创建
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：接上一篇继续分析一下runtime.newproc方法。 函数签名 newproc函数的签名为 newproc(siz int32, fn funcval) siz是传入的参数大小(不是个数)； fn对应的是函数，但并不是函数指针，funcval.fn才是真正指向函数代码的指针。 关键字go 在go            <a href="https://www.cnblogs.com/flhs/p/12677335.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-25 11:19
虾敏四把刀
<span class="post-view-count">阅读(111)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12677335" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/flhs/archive/2020/05/24.html">2020年5月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12945406.html">
    Kubernetes学习笔记（五）：卷
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：简介 卷是Pod的一部分，与Pod共享生命周期。它不是独立的Kubernetes对象，因此不能单独创建。 卷提供的存储功能不但可以解决容器重启后数据丢失的问题，还可以使数据在容器间共享。 一些卷的类型： emptyDir：用于存储临时数据的空目录 hostPath：用于将目录从工作节点挂载到pod             <a href="https://www.cnblogs.com/flhs/p/12945406.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-24 19:02
虾敏四把刀
<span class="post-view-count">阅读(90)</span><text> </text>
<span class="post-comment-count">评论(1)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12945406" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12657348.html">
    Golang源码学习：调度逻辑（一）初始化
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：本文所使用的Golang为1.14，dlv为1.4.0。 源代码 开始调试 可以看到最开始是从_rt0_amd64_linux执行，然后直接跳转到_rt0_amd64。执行si进入_rt0_amd64。 继续执行，runtime.rt0_go() /root/go/src/runtime/asm_a            <a href="https://www.cnblogs.com/flhs/p/12657348.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-24 09:23
虾敏四把刀
<span class="post-view-count">阅读(266)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12657348" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/flhs/archive/2020/05/23.html">2020年5月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12934652.html">
    Kubernetes学习笔记（四）：服务
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：服务介绍 服务是一种为一组相同功能的pod提供单一不变接入点的资源。当服务存在时，他的IP和端口不会改变。客户端通过IP和端口建立连接，这些连接会被路由到任何一个pod上。如此，客户端不需要知道每个单独提供服务的pod地址，这些pod也可以随时被创建、删除。 服务通过标签选择器决定选择哪些pod。             <a href="https://www.cnblogs.com/flhs/p/12934652.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-23 23:03
虾敏四把刀
<span class="post-view-count">阅读(96)</span><text> </text>
<span class="post-comment-count">评论(1)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12934652" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/flhs/p/12510178.html">
    Golang源码学习：使用gdb调试探究Golang函数调用栈结构
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：本文所使用的golang为1.14，gdb为8.1。 一直以来对于函数调用都仅限于函数调用栈这个概念上，但对于其中的详细结构却了解不多。所以用gdb调试一个简单的例子，一探究竟。 函数调用栈的结构（以下简称栈） 栈包含以下作用： 存储函数返回地址。 保存调用者的rbp。 保存局部变量。 为被调用函数            <a href="https://www.cnblogs.com/flhs/p/12510178.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-23 08:40
虾敏四把刀
<span class="post-view-count">阅读(116)</span><text> </text>
<span class="post-comment-count">评论(2)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12510178" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/flhs/default.html?page=2">
        下一页
    </a>

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 虾敏四把刀
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>